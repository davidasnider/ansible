- name: Initiating Intel Architecture bootstrap
  hosts: '{{ cluster }}'
  gather_facts: no
  become: yes
  # vars_files:
  # - ../site-variables.yaml
  environment:
    # VAULT_TOKEN: '{{ vault_ansible_token }}'
    VAULT_ADDR: https://vault.thesniderpad.com
  vars:
    vaulted: "{{ lookup('hashi_vault', 'url=https://vault.thesniderpad.com secret=ansible/data/variables')}}"  # pragma: allowlist secret
    ansible_user: administrator
    ansible_ssh_pass: '{{ vaulted.LINUX_CLEAR_PASSWORD }}'
    ansible_become_pass: '{{ vaulted.LINUX_CLEAR_PASSWORD }}'

  pre_tasks:
  - meta: clear_host_errors

  - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
    become: no
    wait_for:
      port: 22
      host: '{{ inventory_hostname }}'
      search_regex: OpenSSH
      delay: 10
      timeout: 300
    connection: local

  - name: install python
    raw: sudo apt-get -y install python
    when: hostvars[inventory_hostname].serial is not defined

- hosts: '{{ cluster }}'
  # vars_files:
  # - ../site-variables.yaml
  environment:
    # VAULT_TOKEN: '{{ vault_ansible_token }}'
    VAULT_ADDR: https://vault.thesniderpad.com
  vars:
    vaulted: "{{ lookup('hashi_vault', 'url=https://vault.thesniderpad.com secret=ansible/data/variables')}}"  # pragma: allowlist secret
    ansible_user: administrator
    ansible_ssh_pass: '{{ vaulted.LINUX_CLEAR_PASSWORD }}'
    ansible_become_pass: '{{ vaulted.LINUX_CLEAR_PASSWORD }}'
  become: yes
  gather_facts: yes
  ignore_unreachable: yes

  tasks:
  - name: Create Ansible user
    user:
      name: ansible
      shell: /bin/bash
      comment: Ansible management user
      home: /home/ansible
      createhome: yes
      uid: 3000
    when:
    - ansible_facts['os_family'] == "Debian"
    - hostvars[inventory_hostname].serial is not defined

  - name: Add Ansible user to admin group
    user:
      name: ansible
      groups: sudo
      append: yes
    when:
    - ansible_facts['os_family'] == "Debian"
    - hostvars[inventory_hostname].serial is not defined

  - name: Add authorized key
    authorized_key:
      user: ansible
      state: present
      key: '{{ vaulted.id_rsa_pub }}'
    when:
    - ansible_facts['os_family'] == "Debian"
    - hostvars[inventory_hostname].serial is not defined

  - name: Ensure admin group can sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: ^%sudo
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'  # pragma: allowlist secret
    when:
    - ansible_facts['os_family'] == "Debian"
    - hostvars[inventory_hostname].serial is not defined

  - name: Zero out physical disks
    command: 'dd if=/dev/zero of={{ item.value.disk }} bs=512 count=5'
    loop: '{{ k8s_disks|default({})|dict2items }}'
    when: item.key is defined
    tags: testing
