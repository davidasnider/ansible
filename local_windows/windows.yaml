- hosts: localhost
  connection: local
  become: true

  tasks:

    - name: Add Vault Repo Key
      apt_key:
        url: https://apt.releases.hashicorp.com/gpg

    - name: Add Hashi Vault to apt Sources
      apt_repository:
        repo: deb https://apt.releases.hashicorp.com jammy main
        state: present
        filename: hashi_vault

    - name: Upgrade Ubuntu Packages
      apt:
        autoremove: yes
        autoclean: yes
        update_cache: yes
        upgrade: dist

    - name: Install new packages
      apt:
        pkg:
        - htop
        - iperf
        - jq
        - vault
        - python3-pip
        - python3-venv
        - snap
        - sshpass
        - zsh
        autoremove: yes
        autoclean: yes
        update_cache: yes
        cache_valid_time: 86400 # Once per day 24x60x60

    - name: Install kubectl
      community.general.snap:
        name:
          - kubectl
          - kustomize
        classic: yes

    - name: change user shell to zsh
      user:
        name: david
        shell: /bin/zsh

- hosts: localhost
  connection: local
  become: false
  environment:
    VAULT_ADDR: https://vault.thesniderpad.com
  vars:
    vaulted: "{{ lookup('hashi_vault', 'url=https://vault.thesniderpad.com secret=ansible/data/variables')}}" # pragma: allowlist secret
  gather_facts: false

  tasks:

    - name: Create id_rsa
      blockinfile:
        path: /home/david/.ssh/id_rsa
        owner: david
        mode: '0600'
        group: david
        block: '{{ vaulted.id_rsa }}'
        create: yes

    - name: Create id_rsa.pub
      blockinfile:
        path: /home/david/.ssh/id_rsa.pub
        owner: david
        mode: '0600'
        group: david
        block: '{{ vaulted.id_rsa_pub }}'
        create: yes

    - name: Gitconfig email
      git_config:
        name: user.email
        scope: global
        value: 'david@davidsnider.org'

    - name: Gitconfig name
      git_config:
        name: user.name
        scope: global
        value: 'David Snider'

    - name: Install Oh My Zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: ~/.oh-my-zsh

    - name: Install powerlevel10k
      git: repo=https://github.com/romkatv/powerlevel10k.git
        dest=~/.oh-my-zsh/custom/themes/powerlevel10k

    - name: Check if zsh-syntax-highlighting
      stat:
        path: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      register: zsh_syntax_highlighting_result
      tags: oh-my-zsh

    - name: Cloning zsh-syntax-highlighting
      git: repo=https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest=~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
      when: not zsh_syntax_highlighting_result.stat.exists
      tags: oh-my-zsh

    - name: Check if zsh-autosuggestions
      stat:
        path: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      register: zsh_autosuggestions_result
      tags: oh-my-zsh

    - name: Cloning zsh-autosuggestions
      git: repo=https://github.com/zsh-users/zsh-autosuggestions
        dest=~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      when: not zsh_autosuggestions_result.stat.exists
      tags: oh-my-zsh

    - name: Check if zsh-history-substring-search
      stat:
        path: ~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
      register: zsh_history_substring_search_result
      tags: oh-my-zsh

    - name: Cloning zsh-history-substring-search
      git: repo=https://github.com/zsh-users/zsh-history-substring-search
        dest=~/.oh-my-zsh/custom/plugins/zsh-history-substring-search
      when: not zsh_history_substring_search_result.stat.exists
      tags: oh-my-zsh

    - name: Copy p10k.zsh
      copy:
        src: p10k.zsh
        dest: ~/.p10k.zsh

    - name: Ensure Powerlevel10k lines are at the top of ~/.zshrc
      blockinfile:
        path: ~/.zshrc
        block: |
          # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
          # Initialization code that may require console input (password prompts, [y/n]
          # confirmations, etc.) must go above this block; everything else may go below.
          if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
            source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
          fi
        insertbefore: BOF

    - name: Replace ZSH_THEME line
      lineinfile:
        path: ~/.zshrc
        regexp: 'ZSH_THEME='
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'

    - name: Ensure Powerlevel10k lines are in ~/.zshrc
      blockinfile:
        path: ~/.zshrc
        block: |
          # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
          [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

    - name: Add plugins and plugin variables to .zshrc
      blockinfile:
        path: ~/.zshrc
        block: |
          plugins=(git)

    # Todo Add the vault address variable here

    # Todo, get this from the mac and add it here.
    # - name: Automatically enable .venv in shell
    #   blockinfile:
    #     path: ~/.zshrc
    #     block: |

    - name: Create .kube
      file:
        path: /home/david/.kube
        state: directory
