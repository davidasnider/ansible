# Create the Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: mailrelay

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rewrite
  namespace: mailrelay
data:
  entrypoint: |
    #!/bin/bash
    set -e
    # Initialize localmacros as an empty file
    echo -n "" > /etc/exim4/exim4.conf.localmacros
    if [ "$MAILNAME" ]; then
      echo "MAIN_HARDCODE_PRIMARY_HOSTNAME = $MAILNAME" > /etc/exim4/exim4.conf.localmacros
      echo $MAILNAME > /etc/mailname
    fi
    if [ "$KEY_PATH" -a "$CERTIFICATE_PATH" ]; then
      if [ "$MAILNAME" ]; then
        echo "MAIN_TLS_ENABLE = yes" >>  /etc/exim4/exim4.conf.localmacros
      else
        echo "MAIN_TLS_ENABLE = yes" >>  /etc/exim4/exim4.conf.localmacros
      fi
      cp $KEY_PATH /etc/exim4/exim.key
      cp $CERTIFICATE_PATH /etc/exim4/exim.crt
      chgrp Debian-exim /etc/exim4/exim.key
      chgrp Debian-exim /etc/exim4/exim.crt
      chmod 640 /etc/exim4/exim.key
      chmod 640 /etc/exim4/exim.crt
    fi
    opts=(
      dc_local_interfaces "[${BIND_IP:-0.0.0.0}]:${PORT:-25} ; [${BIND_IP6:-::0}]:${PORT:-25}"
      dc_other_hostnames ''
      dc_relay_nets "$(ip addr show dev eth0 | awk '$1 == "inet" { print $2 }' | xargs | sed 's/ /:/g')${RELAY_NETWORKS}"
    )
    if [ "$DISABLE_IPV6" ]; then
            echo 'disable_ipv6=true' >> /etc/exim4/exim4.conf.localmacros
    fi
    if [ "$GMAIL_USER" -a "$GMAIL_PASSWORD" ]; then
      opts+=(
        dc_eximconfig_configtype 'smarthost'
        dc_smarthost 'smtp.gmail.com::587'
      )
      echo "*.google.com:$GMAIL_USER:$GMAIL_PASSWORD" > /etc/exim4/passwd.client
      echo "*.gmail.com:$GMAIL_USER:$GMAIL_PASSWORD" >> /etc/exim4/passwd.client
    elif [ "$SES_USER" -a "$SES_PASSWORD" ]; then
      opts+=(
        dc_eximconfig_configtype 'smarthost'
        dc_smarthost "email-smtp.${SES_REGION:=us-east-1}.amazonaws.com::${SES_PORT:=587}"
      )
      echo "*.amazonaws.com:$SES_USER:$SES_PASSWORD" > /etc/exim4/passwd.client
    # Allow to specify an arbitrary smarthost.
    # Parameters: SMARTHOST_USER, SMARTHOST_PASSWORD: authentication parameters
    # SMARTHOST_ALIASES: list of aliases to puth auth data for (semicolon separated)
    # SMARTHOST_ADDRESS, SMARTHOST_PORT: connection parameters.
    elif [ "$SMARTHOST_ADDRESS" ] ; then
      opts+=(
        dc_eximconfig_configtype 'smarthost'
        dc_smarthost "${SMARTHOST_ADDRESS}::${SMARTHOST_PORT-25}"
      )
      rm -f /etc/exim4/passwd.client
      if [ "$SMARTHOST_ALIASES" -a "$SMARTHOST_USER" -a "$SMARTHOST_PASSWORD" ] ; then
        echo "$SMARTHOST_ALIASES;" | while read -d ";" alias; do
          echo "${alias}:$SMARTHOST_USER:$SMARTHOST_PASSWORD" >> /etc/exim4/passwd.client
        done
      fi
    elif [ "$RELAY_DOMAINS" ]; then
      opts+=(
        dc_relay_domains "${RELAY_DOMAINS}"
        dc_eximconfig_configtype 'internet'
      )
    else
      opts+=(
        dc_eximconfig_configtype 'internet'
      )
    fi
    # allow to add additional macros by bind-mounting a file
    if [ -f /etc/exim4/_docker_additional_macros ]; then
      cat /etc/exim4/_docker_additional_macros >> /etc/exim4/exim4.conf.localmacros
    fi
    /bin/set-exim4-update-conf "${opts[@]}"
    sed -i '/^begin rewrite/a * david@davidsnider.org Ffrs' /etc/exim4/exim4.conf.template
    update-exim4.conf
    exec exim -bd -q15m -v

---

apiVersion: cert-manager.io/v1beta1
kind: Certificate
metadata:
  name: mail-thesniderpad-com
  namespace: mailrelay
spec:
  secretName: mail-thesniderpad-com-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  # commonName: mail.thesniderpad.com
  dnsNames:
  - mail.thesniderpad.com

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailrelay
  namespace: mailrelay
spec:
  selector:
    matchLabels:
      app: mailrelay
  template:
    metadata:
      labels:
        app: mailrelay
    spec:
      containers:
      - name: mailrelay
        image: carlosedp/docker-smtp:v1.0.1
        command: ["/bin/bash"]
        args: ["/bin/entrypoint.sh"]
        env:
        - name: RELAY_NETWORKS
          value: "10.0.0.0/8"
        - name: CERTIFICATE_PATH
          value: "/etc/ssl/certs/tls.crt"
        - name: KEY_PATH
          value: "/etc/ssl/certs/tls.key"
        - name: MAILNAME
          value: "mail.thesniderpad.com"
        - name: DISABLE_IPV6
          value: "yes"
        - name: SMARTHOST_ADDRESS
          value: "smtp.office365.com"
        - name: SMARTHOST_PORT
          value: "587"
        - name: SMARTHOST_USER
          value: "{{ vaulted.SMARTHOST_USER }}"
        - name: SMARTHOST_PASSWORD
          value: "{{ vaulted.SMARTHOST_PASSWORD }}"
        - name: SMARTHOST_ALIASES
          value: "*"
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - name: certificates
            mountPath: /etc/ssl/certs
          - name: rewrite
            mountPath: "/bin/entrypoint.sh"
            subPath: entrypoint
            readOnly: true
        ports:
          - name: mailrelay
            containerPort: 2525
      restartPolicy: "Always"
      volumes:
      - name: rewrite
        configMap:
          name: rewrite
      - name: certificates
        secret:
          secretName: mail-thesniderpad-com-tls
---
apiVersion: v1
kind: Service
metadata:
  name: mailrelay
  namespace: mailrelay
spec:
  selector:
    app: mailrelay
  ports:
  - name: mailrelay
    port: 2525
    protocol: TCP
    targetPort: 25
  type: LoadBalancer
  loadBalancerIP: 10.9.9.202
