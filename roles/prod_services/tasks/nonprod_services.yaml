#### Setup the Remote-ssh service
# Get the code
# Create the pods and services

- name: Get all existing namespaces
  command: kubectl get namespaces
  args:
    warn: no
  register: namespaces
  changed_when: false
  ignore_errors: true

#### Delete Docker Registry namespace
- name: Delete the docker registry services and pods
  command: kubectl delete namespace docker-registry
  when: "'docker-registry' in namespaces.stdout"

### Delete remote-shell instance
- name: Run the script to delete remote-shell pods and services
  command: kubectl delete namespace remote-shell
  when: "'remote-shell' in namespaces.stdout"

#### Delete the mailrelay service
- name: Delete the mailrelay pods and services
  command: kubectl delete namespace mailrelay
  when: "'mailrelay' in namespaces.stdout"

#### Delete rundeck
- name: Delete rundeck
  command: kubectl delete namespace rundeck
  when: "'rundeck' in namespaces.stdout"


# Setup Icinga Non Services
- name: Get the Icinga repo
  git:
    repo: https://github.com/davidasnider/icinga_k8s.git
    dest: /usr/local/src/icinga
    depth: '1'
    accept_hostkey: yes
    version: "main"
    force: yes
  tags: icinga
  changed_when: false

  # Replace all secrets with valid replacements
- name: Add the real secrets to Icinga repositories
  replace:
    path: "/usr/local/src/icinga/{{ item.path }}"
    regexp: "{{ item.regexp1 }}"
    replace: "{{ item.replace }}"
  with_items:
    - { path: 'bases/api-users.conf', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.icinga_api_users }}" }
    - { path: 'bases/ido-pgsql.conf', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.icinga_ido }}" }
    - { path: 'bases/resources.ini', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.icinga_resources_ini }}" }
    - { path: 'bases/commandtransports.ini', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.icinga_api_users }}" }
    - { path: 'bases/icinga_check_netatmo.py', regexp1: 'thisisnottherealclientid', replace: "{{ vaulted.data.netatmo_client_id }}" }
    - { path: 'bases/icinga_check_netatmo.py', regexp1: 'thisisnottherealclientsecret', replace: "{{ vaulted.data.netatmo_client_secret }}" }
    - { path: 'bases/icinga_check_netatmo.py', regexp1: 'thisisnottherealusername', replace: "{{ vaulted.data.netatmo_username }}" }
    - { path: 'bases/icinga_check_netatmo.py', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.netatmo_password }}" }
    - { path: 'primary/kustomization.yaml', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.icinga_api_users }}" }
    - { path: 'secondary/kustomization.yaml', regexp1: 'thisisnottherealpassword', replace: "{{ vaulted.data.icinga_api_users }}" }
    - { path: 'bases/password', regexp1: 'thisisnottherealsecret\n', replace: "{{ vaulted.data.icinga_resources_ini }}" }
    - { path: 'bases/ifttt-webhook-host-notification.sh', regexp1: 'thisisnottherealsecret', replace: "{{ vaulted.data.ifttt_webhook_key }}" }
    - { path: 'bases/ifttt-webhook-service-notification.sh', regexp1: 'thisisnottherealsecret', replace: "{{ vaulted.data.ifttt_webhook_key }}" }
  tags: icinga
  changed_when: false
  no_log: true

# Create the pods and services
- name: Apply Icinga Secondary Kustomize script
  command: kubectl apply -k secondary
  args:
    chdir: /usr/local/src/icinga
  changed_when: false
  tags: icinga

# Setup Cava automation
- name: Get the cava repo
  git:
    repo: https://github.com/davidasnider/cava.git
    dest: /usr/local/src/cava
    depth: '1'
    accept_hostkey: yes
    version: "main"
    force: yes
  tags: cava

# Generate secrets file
- name: Create secrets file
  template:
      dest: /usr/local/src/cava/k8s/bases/secrets.yaml
      src: secrets.yaml
      owner: root
      group: root
      mode: '0600'
  tags: cava

# Create the pods and services
- name: Apply Cava Kustomize script
  command: kubectl apply -k prod
  args:
    chdir: /usr/local/src/cava/k8s
  changed_when: false
  tags: cava
